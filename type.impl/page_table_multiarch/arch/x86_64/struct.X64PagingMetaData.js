(function() {
    var type_impls = Object.fromEntries([["axmm",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PagingMetaData-for-X64PagingMetaData\" class=\"impl\"><a href=\"#impl-PagingMetaData-for-X64PagingMetaData\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PagingMetaData for X64PagingMetaData</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LEVELS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.LEVELS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">LEVELS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = 4usize</h4></section></summary><div class='docblock'>The number of levels of the hardware page table.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.PA_MAX_BITS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.PA_MAX_BITS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">PA_MAX_BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = 52usize</h4></section></summary><div class='docblock'>The maximum number of bits of physical address.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.VA_MAX_BITS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.VA_MAX_BITS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">VA_MAX_BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = 48usize</h4></section></summary><div class='docblock'>The maximum number of bits of virtual address.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.VirtAddr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.VirtAddr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">VirtAddr</a> = VirtAddr</h4></section></summary><div class='docblock'>The virtual address to be translated in this page table. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush_tlb\" class=\"method trait-impl\"><a href=\"#method.flush_tlb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">flush_tlb</a>(vaddr: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;VirtAddr&gt;)</h4></section></summary><div class='docblock'>Flushes the TLB. <a>Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.PA_MAX_ADDR\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.PA_MAX_ADDR\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">PA_MAX_ADDR</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The maximum physical address.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.paddr_is_valid\" class=\"method trait-impl\"><a href=\"#method.paddr_is_valid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">paddr_is_valid</a>(paddr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether a given physical address is valid.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.vaddr_is_valid\" class=\"method trait-impl\"><a href=\"#method.vaddr_is_valid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">vaddr_is_valid</a>(vaddr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether a given virtual address is valid.</div></details></div></details>","PagingMetaData","axmm::ArchPagingMetatData"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[4301]}