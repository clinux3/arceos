(function() {
    var type_impls = Object.fromEntries([["axmm",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddrSpace%3CM,+PTE,+H%3E\" class=\"impl\"><a href=\"#impl-AddrSpace%3CM,+PTE,+H%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M, PTE, H&gt; AddrSpace&lt;M, PTE, H&gt;<div class=\"where\">where\n    M: PagingMetaData,\n    PTE: GenericPTE,\n    H: PagingHandler,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.base\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">base</a>(&amp;self) -&gt; &lt;M as PagingMetaData&gt;::VirtAddr</h4></section></summary><div class=\"docblock\"><p>Returns the address space base.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.end\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">end</a>(&amp;self) -&gt; &lt;M as PagingMetaData&gt;::VirtAddr</h4></section></summary><div class=\"docblock\"><p>Returns the address space end.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the address space size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.page_table\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">page_table</a>(&amp;self) -&gt; &amp;PageTable64&lt;M, PTE, H&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the reference to the inner page table.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.page_table_root\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">page_table_root</a>(&amp;self) -&gt; PhysAddr</h4></section></summary><div class=\"docblock\"><p>Returns the root physical address of the inner page table.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_range\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains_range</a>(\n    &amp;self,\n    start: &lt;M as PagingMetaData&gt;::VirtAddr,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks if the address space contains the given address range.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_empty</a>(\n    base: &lt;M as PagingMetaData&gt;::VirtAddr,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;AddrSpace&lt;M, PTE, H&gt;, AxError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new empty address space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_mappings_from\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">copy_mappings_from</a>(\n    &amp;mut self,\n    other: &amp;AddrSpace&lt;M, PTE, H&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, AxError&gt;</h4></section></summary><div class=\"docblock\"><p>Copies page table mappings from another address space.</p>\n<p>It copies the page table entries only rather than the memory regions,\nusually used to copy a portion of the kernel space mapping to the\nuser space.</p>\n<p>Note that on dropping, the copied PTEs will also be cleared, which could\ntaint the original page table. For workaround, you can use\n[<code>AddrSpace::clear_mappings</code>].</p>\n<p>Returns an error if the two address spaces overlap.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_mappings\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_mappings</a>(\n    &amp;mut self,\n    range: AddrRange&lt;&lt;M as PagingMetaData&gt;::VirtAddr&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Clears the page table mappings in the given address range.</p>\n<p>This should be used in pair with [<code>AddrSpace::copy_mappings_from</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_free_area\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">find_free_area</a>(\n    &amp;self,\n    hint: &lt;M as PagingMetaData&gt;::VirtAddr,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    limit: AddrRange&lt;&lt;M as PagingMetaData&gt;::VirtAddr&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;M as PagingMetaData&gt;::VirtAddr&gt;</h4></section></summary><div class=\"docblock\"><p>Finds a free area that can accommodate the given size.</p>\n<p>The search starts from the given hint address, and the area should be within the given limit range.</p>\n<p>Returns the start address of the free area. Returns None if no such area is found.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_linear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">map_linear</a>(\n    &amp;mut self,\n    start_vaddr: &lt;M as PagingMetaData&gt;::VirtAddr,\n    start_paddr: PhysAddr,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    flags: MappingFlags,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, AxError&gt;</h4></section></summary><div class=\"docblock\"><p>Add a new linear mapping.</p>\n<p>See [<code>Backend</code>] for more details about the mapping backends.</p>\n<p>The <code>flags</code> parameter indicates the mapping permissions and attributes.</p>\n<p>Returns an error if the address range is out of the address space or not\naligned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_alloc\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">map_alloc</a>(\n    &amp;mut self,\n    start: &lt;M as PagingMetaData&gt;::VirtAddr,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    flags: MappingFlags,\n    populate: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, AxError&gt;</h4></section></summary><div class=\"docblock\"><p>Add a new allocation mapping.</p>\n<p>See [<code>Backend</code>] for more details about the mapping backends.</p>\n<p>The <code>flags</code> parameter indicates the mapping permissions and attributes.</p>\n<p>Returns an error if the address range is out of the address space or not\naligned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.populate_area\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">populate_area</a>(\n    &amp;mut self,\n    start: &lt;M as PagingMetaData&gt;::VirtAddr,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, AxError&gt;</h4></section></summary><div class=\"docblock\"><p>Populates the area with physical frames, returning false if the area\ncontains unmapped area.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unmap\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unmap</a>(\n    &amp;mut self,\n    start: &lt;M as PagingMetaData&gt;::VirtAddr,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, AxError&gt;</h4></section></summary><div class=\"docblock\"><p>Removes mappings within the specified virtual address range.</p>\n<p>Returns an error if the address range is out of the address space or not\naligned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unmap_user_areas\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">unmap_user_areas</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, AxError&gt;</h4></section></summary><div class=\"docblock\"><p>To remove user area mappings from address space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">read</a>(\n    &amp;self,\n    start: &lt;M as PagingMetaData&gt;::VirtAddr,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, AxError&gt;</h4></section></summary><div class=\"docblock\"><p>To read data from the address space.</p>\n<h5 id=\"arguments\"><a class=\"doc-anchor\" href=\"#arguments\">ยง</a>Arguments</h5>\n<ul>\n<li><code>start</code> - The start virtual address to read.</li>\n<li><code>buf</code> - The buffer to store the data.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">write</a>(\n    &amp;self,\n    start: &lt;M as PagingMetaData&gt;::VirtAddr,\n    buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, AxError&gt;</h4></section></summary><div class=\"docblock\"><p>To write data to the address space.</p>\n<h5 id=\"arguments-1\"><a class=\"doc-anchor\" href=\"#arguments-1\">ยง</a>Arguments</h5>\n<ul>\n<li><code>start_vaddr</code> - The start virtual address to write.</li>\n<li><code>buf</code> - The buffer to write to the address space.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.protect\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">protect</a>(\n    &amp;mut self,\n    start: &lt;M as PagingMetaData&gt;::VirtAddr,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    flags: MappingFlags,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, AxError&gt;</h4></section></summary><div class=\"docblock\"><p>Updates mapping within the specified virtual address range.</p>\n<p>Returns an error if the address range is out of the address space or not\naligned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Removes all mappings in the address space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_region_access\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">check_region_access</a>(\n    &amp;self,\n    range: AddrRange&lt;&lt;M as PagingMetaData&gt;::VirtAddr&gt;,\n    access_flags: MappingFlags,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks whether an access to the specified memory region is valid.</p>\n<p>Returns <code>true</code> if the memory region given by <code>range</code> is all mapped and\nhas proper permission flags (i.e. containing <code>access_flags</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_page_fault\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">handle_page_fault</a>(\n    &amp;mut self,\n    vaddr: &lt;M as PagingMetaData&gt;::VirtAddr,\n    access_flags: MappingFlags,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Handles a page fault at the given address.</p>\n<p><code>access_flags</code> indicates the access type that caused the page fault.</p>\n<p>Returns <code>true</code> if the page fault is handled successfully (not a real\nfault).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_or_err\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clone_or_err</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;AddrSpace&lt;M, PTE, H&gt;, AxError&gt;</h4></section></summary><div class=\"docblock\"><p>Clone a [<code>AddrSpace</code>] by re-mapping all [<code>MemoryArea</code>]s in a new page table and copying data in user space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate</a>(\n    &amp;self,\n    vaddr: &lt;M as PagingMetaData&gt;::VirtAddr,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PhysAddr&gt;</h4></section></summary><div class=\"docblock\"><p>Translates the given <code>VirtAddr</code> into <code>PhysAddr</code>.</p>\n<p>Returns <code>None</code> if the virtual address is out of range or not mapped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translated_byte_buffer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translated_byte_buffer</a>(\n    &amp;self,\n    vaddr: &lt;M as PagingMetaData&gt;::VirtAddr,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&amp;'static mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Translate&amp;Copy the given <code>VirtAddr</code> with LENGTH len to a mutable u8 Vec through page table.</p>\n<p>Returns <code>None</code> if the virtual address is out of range or not mapped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate_and_get_limit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">translate_and_get_limit</a>(\n    &amp;self,\n    vaddr: &lt;M as PagingMetaData&gt;::VirtAddr,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(PhysAddr, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Translates the given <code>VirtAddr</code> into <code>PhysAddr</code>,\nand returns the size of the <code>MemoryArea</code> corresponding to the target vaddr.</p>\n<p>Returns <code>None</code> if the virtual address is out of range or not mapped.</p>\n</div></details></div></details>",0,"axmm::AddrSpace"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-AddrSpace%3CM,+PTE,+H%3E\" class=\"impl\"><a href=\"#impl-Debug-for-AddrSpace%3CM,+PTE,+H%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M, PTE, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for AddrSpace&lt;M, PTE, H&gt;<div class=\"where\">where\n    M: PagingMetaData,\n    PTE: GenericPTE,\n    H: PagingHandler,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","axmm::AddrSpace"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-AddrSpace%3CM,+PTE,+H%3E\" class=\"impl\"><a href=\"#impl-Drop-for-AddrSpace%3CM,+PTE,+H%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;M, PTE, H&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for AddrSpace&lt;M, PTE, H&gt;<div class=\"where\">where\n    M: PagingMetaData,\n    PTE: GenericPTE,\n    H: PagingHandler,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a href=\"#method.drop\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","axmm::AddrSpace"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[20564]}